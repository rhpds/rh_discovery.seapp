---
- name: Create letsencrypt subdirectories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u+rwx,g+rx,o-rwx
  loop:
    - /etc/letsencrypt
    - /var/lib/letsencrypt

- name: Stop httpd
  ansible.builtin.service:
    name: httpd.service
    state: stopped
  register: stop_httpd
  until: stop_httpd is not failed
  retries: 5

# If this fails check out status of certbot: https://letsencrypt.status.io/
- name: Try to issue SSL certificate
  block:
    - name: Issue SSL cert
      ansible.builtin.shell: >
        podman run -it --rm --name certbot \
            -v "/etc/letsencrypt:/etc/letsencrypt:Z" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt:Z" \
            -p 80:80 \
            -p 443:443 \
            docker.io/certbot/certbot:latest certonly \
            --key-type rsa \
            --rsa-key-size 4096 \
            --no-bootstrap \
            --standalone \
            -d "{{ rh_discovery_seapp_satellite_external_fqdn }}" \
            --email ansible-network@redhat.com \
            --noninteractive \
            --agree-tos
      register: _r_issue_sat_cert
      until: _r_issue_sat_cert is not failed
      retries: 5
  rescue:
    - name: Error with SSL cert
      ansible.builtin.debug:
        msg: "Unable to retrieve SSL cert, ERROR, continuing on without cert..."

    - name: Append dns_information failure
      ansible.builtin.set_fact:
        dns_information:
          - "{{ dns_information }}"
          - "The Lets Encrypt certbot failed for the satellite node, please check https://letsencrypt.status.io/ to make sure the service is running"

- name: Download LetsEncrypt CA certs
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}"
    mode: 0644
    checksum: "{{ item.checksum }}"
    group: root
    owner: root
  loop:
    - url: https://letsencrypt.org/certs/2024/r10.pem
      checksum: sha256:29ee679fb573c905bf3538126de6893a9e20ebe1cf400c6df22e5d171c94f543
    - url: https://letsencrypt.org/certs/2024/r11.pem
      checksum: sha256:6c06a45850f93aa6e31f9388f956379d8b4fb7ffca5211b9bab4ad159bdfb7b9
    - url: https://letsencrypt.org/certs/isrgrootx1.pem
      checksum: sha256:22b557a27055b33606b6559f37703928d3e4ad79f110b407d04986e1843543d1

- name: Retrieve LetsEncrypt R10 cert
  ansible.builtin.slurp:
    src: "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/r10.pem"
  register: intermediate_cert_r10

- name: Retrieve LetsEncrypt R11 cert
  ansible.builtin.slurp:
    src: "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/r11.pem"
  register: intermediate_cert_r11

- name: Retrieve LetsEncrypt root X1 cert
  ansible.builtin.slurp:
    src: "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/isrgrootx1.pem"
  register: root_cert

- name: Combine R10, R11 and root X1 certs to create Letsencrypt CA bundle
  ansible.builtin.copy:
    content: |
      {{ root_cert.content|b64decode }}
      {{ intermediate_cert_r10.content | b64decode }}
      {{ intermediate_cert_r11.content | b64decode }}
    dest: "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/letsencrypt-ca-bundle.pem"

- name: Start httpd
  ansible.builtin.service:
    name: httpd.service
    state: started
  register: start_httpd
  until: start_httpd is not failed
  retries: 5

- name: Disable SELinux
  ansible.builtin.command: setenforce 0

- name: Disable SELinux by updating config file
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'

- name: Copy archive directory
  ansible.builtin.copy:
    src: /etc/letsencrypt/archive
    dest: "{{ item }}"
    remote_src: true
  loop:
    - /etc/pki
    - /root/

- name: Copy archive directory
  ansible.builtin.copy:
    src: /etc/letsencrypt/archive
    dest: /
    remote_src: true
    mode: u+rwx,g+rx,o+rx

- name: Update satellite with LetsEncrypt cert and enable registration and template modules
  ansible.builtin.shell: >-
    satellite-installer --scenario satellite
    --certs-server-cert "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/fullchain.pem"
    --certs-server-key "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/privkey.pem"
    --certs-server-ca-cert "/etc/letsencrypt/live/{{ rh_discovery_seapp_satellite_external_fqdn }}/letsencrypt-ca-bundle.pem"
    --certs-update-server --certs-update-server-ca
    --foreman-proxy-registration true
    --foreman-proxy-templates true
  register: satellite_update_cert
  failed_when: '"Success!" not in satellite_update_cert.stdout'
